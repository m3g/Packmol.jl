var documenterSearchIndex = {"docs":
[{"location":"#Packmol.jl","page":"Home","title":"Packmol.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Packmol.jl is in very early stages of development.","category":"page"},{"location":"","page":"Home","title":"Home","text":"run_packmol","category":"page"},{"location":"#Packmol.run_packmol","page":"Home","title":"Packmol.run_packmol","text":"run_packmol()\nrun_packmol(input_file::String)\n\nRuns the packmol executable with the input file input_file. This will run the classical http://m3g.iqm.unicamp.br/packmol program, which is a pre-compiled binary. The input file is a text file with the same syntax as the packmol input files.\n\nIf no input file is provided, a file explorer will be opened to choose the  input file.\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"pack_monoatomic!","category":"page"},{"location":"#Packmol.pack_monoatomic!","page":"Home","title":"Packmol.pack_monoatomic!","text":"pack_monoatomic!(positions::AbstractVector{<:SVector{N,T}}, unitcell, tol)\n\nPack a monoatomic system with iniital positions x and distance tolerance tol, into the unitcell defined by unitcell, considering periodic boundary conditions.\n\nThe unitcell can be a vector, in the case of orthorhombic cells, or a matrix, in the case of triclinic cells.\n\nThe coordinates and the unitcells can be two- or three-dimensional. \n\nExample\n\njulia> using Packmol, StaticArrays\n\njulia> coordinates = 100 * rand(SVector{3,Float64}, 10^5);\n\njulia> unitcell = [100.0, 100.0, 100.0]; tolerance = 2.0;\n\njulia> pack_monoatomic!(coordinates, unitcell, tolerance)\n\nAfter packing, the coordinates array will have updated positions for the atoms without overlaps. \n\n\n\n\n\n","category":"function"}]
}
